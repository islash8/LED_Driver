Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o (exit)
/usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
                              ./DIO_prog.o (__do_copy_data)
/usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
                              ./delay.o (__umulhisi3)
/usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3.o)
                              ./delay.o (__divsf3)
/usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3x.o)
                              /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3.o) (__divsf3x)
/usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fixunssfsi.o)
                              ./delay.o (__fixunssfsi)
/usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(floatsisf.o)
                              ./delay.o (__floatunsisf)
/usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_inf.o)
                              /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3x.o) (__fp_inf)
/usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_nan.o)
                              /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3x.o) (__fp_nan)
/usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_pscA.o)
                              /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3x.o) (__fp_pscA)
/usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_pscB.o)
                              /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3x.o) (__fp_pscB)
/usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_round.o)
                              /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3.o) (__fp_round)
/usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_split3.o)
                              /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3x.o) (__fp_split3)
/usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_zero.o)
                              /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fixunssfsi.o) (__fp_zero)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
LOAD ./DIO_prog.o
LOAD ./delay.o
LOAD ./main.o
START GROUP
LOAD /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libatmega32.a
END GROUP
                0x0000000000020000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x20000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                0x0000000000000400                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0xb22
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem.*)
                0x0000000000000054                . = ALIGN (0x2)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT_BY_NAME(*)(.ctors)
 SORT_BY_NAME(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000076        0x8 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
 *(.init9)
 *(.text)
 .text          0x000000000000007e        0x4 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
                0x000000000000007e                __vector_1
                0x000000000000007e                __vector_12
                0x000000000000007e                __bad_interrupt
                0x000000000000007e                __vector_6
                0x000000000000007e                __vector_3
                0x000000000000007e                __vector_11
                0x000000000000007e                __vector_13
                0x000000000000007e                __vector_17
                0x000000000000007e                __vector_19
                0x000000000000007e                __vector_7
                0x000000000000007e                __vector_5
                0x000000000000007e                __vector_4
                0x000000000000007e                __vector_9
                0x000000000000007e                __vector_2
                0x000000000000007e                __vector_15
                0x000000000000007e                __vector_8
                0x000000000000007e                __vector_14
                0x000000000000007e                __vector_10
                0x000000000000007e                __vector_16
                0x000000000000007e                __vector_18
                0x000000000000007e                __vector_20
 .text          0x0000000000000082        0x0 ./DIO_prog.o
 .text          0x0000000000000082        0x0 ./delay.o
 .text          0x0000000000000082        0x0 ./main.o
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3x.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fixunssfsi.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(floatsisf.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_inf.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_nan.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_pscA.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_pscB.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_round.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_split3.o)
 .text          0x0000000000000082        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_zero.o)
                0x0000000000000082                . = ALIGN (0x2)
 *(.text.*)
 .text.DIO_u8SetPinDirection
                0x0000000000000082      0x19a ./DIO_prog.o
                0x0000000000000082                DIO_u8SetPinDirection
 .text.DIO_u8SetPinValue
                0x000000000000021c      0x18a ./DIO_prog.o
                0x000000000000021c                DIO_u8SetPinValue
 .text.DIO_u8ReadPinValue
                0x00000000000003a6       0xf2 ./DIO_prog.o
                0x00000000000003a6                DIO_u8ReadPinValue
 .text.DIO_u8SetPortDirection
                0x0000000000000498       0x80 ./DIO_prog.o
                0x0000000000000498                DIO_u8SetPortDirection
 .text.DIO_u8SetPortValue
                0x0000000000000518       0x80 ./DIO_prog.o
                0x0000000000000518                DIO_u8SetPortValue
 .text.DIO_u8ReadPortValue
                0x0000000000000598       0x9c ./DIO_prog.o
                0x0000000000000598                DIO_u8ReadPortValue
 .text.delay_ms
                0x0000000000000634      0x14a ./delay.o
                0x0000000000000634                delay_ms
 .text.delay_us
                0x000000000000077e       0x72 ./delay.o
                0x000000000000077e                delay_us
 .text.main     0x00000000000007f0       0xb2 ./main.o
                0x00000000000007f0                main
 .text.libgcc.mul
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000008a2        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000008a2        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000008a2        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000008a2       0x1e /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
                0x00000000000008a2                __umulhisi3
 .text.libgcc.div
                0x00000000000008c0        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc   0x00000000000008c0        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.prologue
                0x00000000000008c0        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.builtins
                0x00000000000008c0        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fmul
                0x00000000000008c0        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 .text.libgcc.fixed
                0x00000000000008c0        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 .text.avr-libc.fplib
                0x00000000000008c0        0x8 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3.o)
                0x00000000000008c0                __divsf3
 .text.avr-libc.fplib
                0x00000000000008c8       0xdc /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3x.o)
                0x00000000000008e8                __divsf3x
                0x00000000000008ee                __divsf3_pse
 .text.avr-libc.fplib
                0x00000000000009a4       0x5e /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fixunssfsi.o)
                0x00000000000009a4                __fixunssfsi
 .text.avr-libc.fplib
                0x0000000000000a02       0x7a /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(floatsisf.o)
                0x0000000000000a02                __floatunsisf
                0x0000000000000a06                __floatsisf
 .text.avr-libc.fplib
                0x0000000000000a7c        0xc /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_inf.o)
                0x0000000000000a7c                __fp_inf
 .text.avr-libc.fplib
                0x0000000000000a88        0x6 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_nan.o)
                0x0000000000000a88                __fp_nan
 .text.avr-libc.fplib
                0x0000000000000a8e        0xe /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_pscA.o)
                0x0000000000000a8e                __fp_pscA
 .text.avr-libc.fplib
                0x0000000000000a9c        0xe /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_pscB.o)
                0x0000000000000a9c                __fp_pscB
 .text.avr-libc.fplib
                0x0000000000000aaa       0x22 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_round.o)
                0x0000000000000aaa                __fp_round
 .text.avr-libc.fplib
                0x0000000000000acc       0x44 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_split3.o)
                0x0000000000000acc                __fp_split3
                0x0000000000000adc                __fp_splitA
 .text.avr-libc.fplib
                0x0000000000000b10        0xe /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_zero.o)
                0x0000000000000b10                __fp_zero
                0x0000000000000b12                __fp_szero
                0x0000000000000b1e                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000b1e        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
                0x0000000000000b1e                exit
                0x0000000000000b1e                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000b1e        0x4 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 *(.fini0)
 *(.hightext)
 *(.hightext*)
 *(.progmemx.*)
                0x0000000000000b22                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
                0x0000000000000b22                _etext = .

.data           0x0000000000800060       0x10 load address 0x0000000000000b22
                0x0000000000800060                PROVIDE (__data_start = .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
 .data          0x0000000000800060        0x0 ./DIO_prog.o
 .data          0x0000000000800060        0x0 ./delay.o
 .data          0x0000000000800060        0x0 ./main.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3x.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fixunssfsi.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(floatsisf.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_inf.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_nan.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_pscA.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_pscB.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_round.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_split3.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_zero.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 *(.rodata*)
 .rodata.shiftedNumber
                0x0000000000800060        0x8 ./DIO_prog.o
 .rodata.shiftedNumber
                0x0000000000800068        0x8 ./main.o
 *(.gnu.linkonce.r*)
                0x0000000000800070                . = ALIGN (0x2)
                0x0000000000800070                _edata = .
                0x0000000000800070                PROVIDE (__data_end = .)

.bss            0x0000000000800070        0x0
                [!provide]                        PROVIDE (__bss_start = .)
 *(.bss)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o
 .bss           0x0000000000800070        0x0 ./DIO_prog.o
 .bss           0x0000000000800070        0x0 ./delay.o
 .bss           0x0000000000800070        0x0 ./main.o
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/avr5/libgcc.a(_umulhisi3.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(divsf3x.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fixunssfsi.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(floatsisf.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_inf.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_nan.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_pscA.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_pscB.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_round.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_split3.o)
 .bss           0x0000000000800070        0x0 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/libm.a(fp_zero.o)
 *(.bss*)
 *(COMMON)
                [!provide]                        PROVIDE (__bss_end = .)
                0x0000000000000b22                __data_load_start = LOADADDR (.data)
                0x0000000000000b32                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800070        0x0
                [!provide]                        PROVIDE (__noinit_start = .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end = .)
                0x0000000000800070                _end = .
                [!provide]                        PROVIDE (__heap_start = .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000     0x153c
 *(.stab)
 .stab          0x0000000000000000      0xc78 ./DIO_prog.o
 .stab          0x0000000000000c78      0x504 ./delay.o
                                        0x588 (size before relaxing)
 .stab          0x000000000000117c      0x3c0 ./main.o
                                        0x480 (size before relaxing)

.stabstr        0x0000000000000000      0xd0e
 *(.stabstr)
 .stabstr       0x0000000000000000      0xd0e ./DIO_prog.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 ./DIO_prog.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000011       0x12 ./delay.o
 .comment       0x0000000000000011       0x12 ./main.o

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x4e6
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x4e6 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_abbrev   0x0000000000000000      0x4a3
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x4a3 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_line     0x0000000000000000       0x1d
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1d /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x196
 *(.debug_str)
 .debug_str     0x0000000000000000      0x196 /usr/lib/gcc/avr/8.2.0/../../../../avr/lib/avr5/crtatmega32.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)

.debug_addr
 *(.debug_addr)
OUTPUT(LED_DIO.elf elf32-avr)
LOAD linker stubs
